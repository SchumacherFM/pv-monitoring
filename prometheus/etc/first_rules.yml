groups:
  #  - name: custom_rules
  #  interval: 5m
  #  rules:
  #    - record: shelly_wh_total_test
  #      expr: rate(shelly_wh_total[5m]) * scalar(cham_tarif_bezug)/100
  - name: daily_stats
    interval: 1h
    rules:
      - record: counter:mbmd_measurement_energy_imported_total:total1d
        expr: |
          max_over_time( max(mbmd_measurement_energy_imported_total{device_name="se10kgrid",unit="kWh"}>10)[1d:10s] )
          - 
          min_over_time( min(mbmd_measurement_energy_imported_total{device_name="se10kgrid",unit="kWh"}>10)[1d:10s] )

      - record: counter:mbmd_measurement_energy_exported_total:total1d
        expr: |
          max_over_time( max(mbmd_measurement_energy_exported_total{device_name="se10kgrid",unit="kWh"}>10)[1d:10s] )   
          -
          min_over_time( min(mbmd_measurement_energy_exported_total{device_name="se10kgrid",unit="kWh"}>10)[1d:10s] )   

      - record: counter:mbmd_measurement_energy_exported_total:solar_consumption1d
        expr: '( max_over_time( max(mbmd_measurement_energy_exported_total{device_name="se17kpv",unit="kWh"}>0)[1d:10s] ) - min_over_time( min(mbmd_measurement_energy_exported_total{device_name="se17kpv",unit="kWh"}>0)[1d:10s] ) ) + ( max_over_time( max(mbmd_measurement_energy_exported_total{device_name="se10kpv",unit="kWh"}>0)[1d:10s] ) - min_over_time( min(mbmd_measurement_energy_exported_total{device_name="se10kpv",unit="kWh"}>0)[1d:10s] ) ) - ( max_over_time( max(mbmd_measurement_energy_exported_total{device_name="se10kgrid",unit="kWh"}>0)[1d:10s] ) - min_over_time( min(mbmd_measurement_energy_exported_total{device_name="se10kgrid",unit="kWh"}>0)[1d:10s] ) )'
